package com.tbohne.sqlite.processor.models;


import com.google.common.collect.ImmutableList;
import com.google.common.collect.ImmutableMap;
import com.tbohne.sqlite.annotations.createTable.TableColumn;
import com.tbohne.sqlite.annotations.enums.Affinity;
import com.tbohne.sqlite.annotations.query.ProjectionExpression;

import org.checkerframework.checker.nullness.qual.Nullable;

/**
 * {@link ProjectionExpression} and {@link ProjectionExpressionModel}
 * {@link CreateTableModel} and {@link TableColumnModel}
 * {@link TableColumn} and {@link ProjectionTableColumnModel}
 */
public abstract class AbstractColumnModel {
	public final String javaName;
	public final String sqlName;
	public final @Nullable String tableJavaName;
	public final Affinity affinity;
	public final boolean isNonNull;
	public final boolean isUnique;
	public final boolean isAutoGeneratedPrimaryKey;
	public final ImmutableList<SqlBinderModel> sqlBinders;
	public final ImmutableMap<String, SqlBinderModel> javaToBinderMap;

	public AbstractColumnModel(
			String javaName,
			String sqlName,
			@Nullable String tableJavaName,
			Affinity affinity,
			boolean isNonNull,
			boolean isUnique,
			boolean isAutoGeneratedPrimaryKey,
			ImmutableList<SqlBinderModel> sqlBinders,
			ImmutableMap<String, SqlBinderModel> javaToBinderMap)
	{
		this.javaName = javaName;
		this.sqlName = sqlName;
		this.tableJavaName = tableJavaName;
		this.affinity = affinity;
		this.isNonNull = isNonNull;
		this.isUnique = isUnique;
		this.isAutoGeneratedPrimaryKey = isAutoGeneratedPrimaryKey;
		this.sqlBinders = sqlBinders;
		this.javaToBinderMap = javaToBinderMap;
	}

	;
}

